DATA SEGMENT
    STR1 DB "ENTER A STRING: $"
    MAXLEN DB 100  
    ACTCHAR DB ?  
    STRING DB 100 DUP('$') 
    NEWLINE DB 10,13,'$'
    COUNT DB 0
    TEN DW 10
DATA ENDS   

CODE SEGMENT
    ASSUME CS:CODE, DS:DATA
START:
    MOV AX, DATA  
    MOV DS, AX            ; INITIALIZE DATA SEGMENT
    
    ; DISPLAY PROMPT
    LEA DX, STR1  
    MOV AH, 09H  
    INT 21H  
    
    ; READ STRING INPUT
    LEA DX, MAXLEN 
    MOV AH, 0AH  
    INT 21H  
    
    ; NEW LINE
    LEA DX, NEWLINE  
    MOV AH, 09H  
    INT 21H  
    
    ; PROCESS STRING
    LEA SI, STRING        ; POINT TO INPUT STRING
    MOV CL, ACTCHAR       ; GET ACTUAL CHARACTER COUNT
    MOV CH, 0             ; CLEAR UPPER BYTE OF CX
    
PROCESS_LOOP:
    CMP BYTE PTR [SI], 0DH; CHECK FOR CARRIAGE RETURN
    JE DISPLAY_COUNT
    
    ; CONVERT TO UPPERCASE
    CMP BYTE PTR [SI], 'a'
    JB CHECK_SPACE
    CMP BYTE PTR [SI], 'z'
    JA CHECK_SPACE
    SUB BYTE PTR [SI], 20H
    
CHECK_SPACE:
    CMP BYTE PTR [SI], ' '
    JE HANDLE_SPACE
    
    ; DISPLAY CHARACTER
    MOV DL, [SI]
    MOV AH, 02H
    INT 21H
    JMP NEXT_CHAR

HANDLE_SPACE:
    ; NEW LINE AND COUNT WORD
    LEA DX, NEWLINE
    MOV AH, 09H
    INT 21H
    INC COUNT

NEXT_CHAR:
    INC SI
    LOOP PROCESS_LOOP

DISPLAY_COUNT:
    ; COUNT LAST WORD
    INC COUNT
    
    ; DISPLAY WORD COUNT
    LEA DX, NEWLINE
    MOV AH, 09H
    INT 21H
    
    MOV AL, COUNT
    MOV AH, 0             ; CONVERT BYTE TO WORD
    CALL PRINT_NUMBER
    
    ; EXIT PROGRAM
    MOV AH, 4CH
    INT 21H  

PRINT_NUMBER PROC NEAR
    MOV CX, 0
DIV_LOOP:
    MOV DX, 0
    DIV TEN
    PUSH DX
    INC CX
    CMP AX, 0
    JNE DIV_LOOP

PRINT_LOOP:
    POP DX
    ADD DL, '0'
    MOV AH, 02H
    INT 21H
    LOOP PRINT_LOOP
    RET
PRINT_NUMBER ENDP

CODE ENDS
END START